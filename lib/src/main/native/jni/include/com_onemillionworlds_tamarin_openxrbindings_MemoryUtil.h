/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_onemillionworlds_tamarin_openxrbindings_MemoryUtil */

#ifndef _Included_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
#define _Included_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    nmemAlloc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_nmemAlloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    nmemCalloc
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_nmemCalloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    nmemFree
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_nmemFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memNewBuffer
 * Signature: (JI)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memNewBuffer
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memAddress
 * Signature: (Ljava/nio/ByteBuffer;)J
 */
JNIEXPORT jlong JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memAddress
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memGetInt
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memGetInt
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memGetLong
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memGetLong
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memGetAddress
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memGetAddress
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memPutInt
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memPutInt
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memPutLong
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memPutLong
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memPutAddress
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memPutAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memCopy
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memCopy
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     com_onemillionworlds_tamarin_openxrbindings_MemoryUtil
 * Method:    memUTF8
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_onemillionworlds_tamarin_openxrbindings_MemoryUtil_memUTF8
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
