/*
 * OpenXR Java bindings for Android
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    google()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.0')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

// Task to generate JNI headers
tasks.register('generateJniHeaders', JavaCompile) {
    source = sourceSets.main.java
    classpath = sourceSets.main.compileClasspath
    destinationDirectory.set(layout.buildDirectory.dir("classes/java/jni"))
    options.headerOutputDirectory.set(file("src/main/native/jni/include"))
}

// Make sure JNI headers are generated before building
tasks.build {
    dependsOn 'generateJniHeaders'
}
